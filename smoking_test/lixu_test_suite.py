# coding=utf-8

import unittest
import os,sys,time,json,urllib2,re
sys.path.insert(0, '/root/FunctionAutomation/ekos_auto')
import ekosUtils
import log_config

from HTMLTestRunner import HTMLTestRunner
from login_active_plugin import TestLogin
from manage_hosts import TestManageHosts
from manage_stack import TestManageStack
from storage import TestStorage
from manage_image import TestManageImage

logger = log_config.Logger('/root/FunctionAutomation/ekos_auto/smoking_test/smoking.log')

myutils = ekosUtils.Utils()

######Unit Test: 登陆，激活插件###################################################################################
suite = unittest.TestSuite()

# suite.addTest(TestLogin("test_login"))
# suite.addTest(TestLogin("test_logout"))
# suite.addTest(TestLogin("test_active_tenant"))
# suite.addTest(TestLogin("test_active_image_manage"))
# suite.addTest(TestLogin("test_active_node"))
# suite.addTest(TestLogin("test_active_stack"))
# suite.addTest(TestLogin("test_active_storage"))
# suite.addTest(TestLogin("test_active_registry"))
# suite.addTest(TestLogin("test_active_network"))
# suite.addTest(TestLogin("test_active_appstore"))
# suite.addTest(TestLogin("test_active_logging"))
# suite.addTest(TestLogin("test_active_monitor"))
# suite.addTest(TestLogin("test_admin_off"))
# suite.addTest(TestLogin("test_admin_on"))

######Unit Test: 主机管理###################################################################################
# suite.addTest(TestManageHosts("test_get_nodes_page"))
# suite.addTest(TestManageHosts("test_enable_node"))
# suite.addTest(TestManageHosts("test_disabe_node"))
# suite.addTest(TestManageHosts("test_nodes_view_log"))

######Unit Test: 应用管理###################################################################################
# suite.addTest(TestManageStack("test_add_stack"))
# suite.addTest(TestManageStack("test_add_app"))
# suite.addTest(TestManageStack("test_check_app"))
# suite.addTest(TestManageStack("test_add_port"))
# suite.addTest(TestManageStack("test_update_port"))
# suite.addTest(TestManageStack("test_config_autoscale"))
# suite.addTest(TestManageStack("test_disable_autoscale"))
# suite.addTest(TestManageStack("test_add_tcp_lb"))
# suite.addTest(TestManageStack("test_add_tcp_lb_rule"))
# suite.addTest(TestManageStack("test_check_lb"))
# suite.addTest(TestManageStack("test_app_delete"))
# suite.addTest(TestManageStack("test_lb_delete"))
# suite.addTest(TestManageStack("test_stack_delete"))
######Unit Test: 应用市场###################################################################################


######Unit Test: 存储#######################################################################################

# suite.addTest(TestStorage("test_add_nfs"))
# suite.addTest(TestStorage("test_nfs_check"))
# suite.addTest(TestStorage("test_nfs_delete"))
# suite.addTest(TestStorage("test_add_ceph"))
# suite.addTest(TestStorage("test_ceph_check"))
# suite.addTest(TestStorage("test_ceph_delete"))

######Unit Test: 应用市场###################################################################################


######Unit Test: 镜像管理###################################################################################

# suite.addTest(TestManageImage("test_get_registry"))
# suite.addTest(TestManageImage("test_add_pub_registry"))
# suite.addTest(TestManageImage("test_update_auth"))
# suite.addTest(TestManageImage("test_delete_pub"))
# suite.addTest(TestManageImage("test_add_pri_registry"))
# suite.addTest(TestManageImage("test_delete_pri"))
# suite.addTest(TestManageImage("test_get_images"))
suite.addTest(TestManageImage("test_delete_image"))

######Unit Test: 网络#######################################################################################


######Unit Test: 日志#######################################################################################

######Unit Test: 监控告警###################################################################################

######Unit Test: 认证授权###################################################################################

######Unit Test: 多租户#####################################################################################

if __name__ == '__main__':

	with open('HTMLReport.html', 'w') as f:
		# Generate HTML report
		runner = HTMLTestRunner(stream=f,
									title='Smoking Test Report',
									description='Generated by HTMLTestRunner.',
									verbosity=2
								) 
		runner.run(suite)
